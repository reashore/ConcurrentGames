using System;
using System.Xml.Serialization;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.ComponentModel;
using System.Xml.Schema;
using System.Collections.ObjectModel;

// This code was generated by XmlSchemaClassGenerator version 2.0.0.0.
// ReSharper disable All

namespace SportsIq.Models.SportRadar.Nhl.GameInfo
{
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("gameType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    [XmlRoot("game", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public class NhlGameInfo : IBaseGameAttributes, IGameStateAttributes, IGameMetadataAttributes
    {
        [XmlElement("venue", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public VenueType Venue { get; set; }
        
        [XmlIgnore]
        private Collection<TeamType> _team;
        
        [XmlElement("team", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<TeamType> Team
        {
            get
            {
                return _team;
            }
            private set
            {
                _team = value;
            }
        }
        
        [XmlIgnore]
        public bool TeamSpecified
        {
            get
            {
                return (Team.Count != 0);
            }
        }
        
        public NhlGameInfo()
        {
            _team = new Collection<TeamType>();
            _officials = new Collection<GameTypeOfficialsOfficial>();
            _stars = new Collection<GameTypeStarsStar>();
        }
        
        [XmlIgnore]
        private Collection<GameTypeOfficialsOfficial> _officials;
        
        [XmlArray("officials", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("official", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GameTypeOfficialsOfficial> Officials
        {
            get
            {
                return _officials;
            }
            private set
            {
                _officials = value;
            }
        }
        
        [XmlIgnore]
        public bool OfficialsSpecified
        {
            get
            {
                return (Officials.Count != 0);
            }
        }
        
        [XmlIgnore]
        private Collection<GameTypeStarsStar> _stars;
        
        [XmlArray("stars", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("star", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GameTypeStarsStar> Stars
        {
            get
            {
                return _stars;
            }
            private set
            {
                _stars = value;
            }
        }
        
        [XmlIgnore]
        public bool StarsSpecified
        {
            get
            {
                return (Stars.Count != 0);
            }
        }
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("title", Form=XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
        
        [XmlAttribute("status", Form=XmlSchemaForm.Unqualified)]
        public IBaseGameAttributesStatus Status { get; set; }
        
        [XmlIgnore]
        public bool StatusSpecified { get; set; }
        
        [XmlAttribute("coverage", Form=XmlSchemaForm.Unqualified)]
        public IBaseGameAttributesCoverage Coverage { get; set; }
        
        [XmlIgnore]
        public bool CoverageSpecified { get; set; }
        
        [XmlAttribute("away_team", Form=XmlSchemaForm.Unqualified)]
        public string Away_Team { get; set; }
        
        [XmlAttribute("home_team", Form=XmlSchemaForm.Unqualified)]
        public string Home_Team { get; set; }
        
        [XmlAttribute("scheduled", Form=XmlSchemaForm.Unqualified, DataType="dateTime")]
        public DateTime Scheduled { get; set; }
        
        [XmlIgnore]
        public bool ScheduledSpecified { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
        
        [XmlAttribute("clock", Form=XmlSchemaForm.Unqualified)]
        public string Clock { get; set; }
        
        [XmlAttribute("period", Form=XmlSchemaForm.Unqualified)]
        public string Period { get; set; }
        
        [XmlAttribute("entry_mode", Form=XmlSchemaForm.Unqualified)]
        public IGameStateAttributesEntry_Mode Entry_Mode { get; set; }
        
        [XmlIgnore]
        public bool Entry_ModeSpecified { get; set; }
        
        [XmlAttribute("attendance", Form=XmlSchemaForm.Unqualified)]
        public string Attendance { get; set; }
        
        [XmlAttribute("start_time", Form=XmlSchemaForm.Unqualified, DataType="dateTime")]
        public DateTime Start_Time { get; set; }
        
        [XmlIgnore]
        public bool Start_TimeSpecified { get; set; }
        
        [XmlAttribute("end_time", Form=XmlSchemaForm.Unqualified, DataType="dateTime")]
        public DateTime End_Time { get; set; }
        
        [XmlIgnore]
        public bool End_TimeSpecified { get; set; }
        
        [XmlAttribute("total_game_duration", Form=XmlSchemaForm.Unqualified)]
        public string Total_Game_Duration { get; set; }
    }

    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("venueType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class VenueType
    {
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("name", Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
        
        [XmlAttribute("desc", Form=XmlSchemaForm.Unqualified)]
        public string Desc { get; set; }
        
        [XmlAttribute("address", Form=XmlSchemaForm.Unqualified)]
        public string Address { get; set; }
        
        [XmlAttribute("capacity", Form=XmlSchemaForm.Unqualified)]
        public string Capacity { get; set; }
        
        [XmlAttribute("city", Form=XmlSchemaForm.Unqualified)]
        public string City { get; set; }
        
        [XmlAttribute("country", Form=XmlSchemaForm.Unqualified)]
        public string Country { get; set; }
        
        [XmlAttribute("state", Form=XmlSchemaForm.Unqualified)]
        public string State { get; set; }
        
        [XmlAttribute("zip", Form=XmlSchemaForm.Unqualified)]
        public string Zip { get; set; }
        
        [XmlAttribute("time_zone", Form=XmlSchemaForm.Unqualified)]
        public string Time_Zone { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("injuryType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class InjuryType
    {
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("desc", Form=XmlSchemaForm.Unqualified)]
        public string Desc { get; set; }
        
        [XmlAttribute("comment", Form=XmlSchemaForm.Unqualified)]
        public string Comment { get; set; }
        
        [XmlAttribute("start_date", Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime Start_Date { get; set; }
        
        [XmlAttribute("update_date", Form=XmlSchemaForm.Unqualified, DataType="date")]
        public DateTime Update_Date { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Update_Date-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Update_Date property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Update_DateSpecified { get; set; }
        
        [XmlAttribute("status", Form=XmlSchemaForm.Unqualified)]
        public InjuryTypeStatus Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Status-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool StatusSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("InjuryTypeStatus", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum InjuryTypeStatus
    {
        
        Unknown,
        
        [XmlEnum("Day To Day")]
        Day_To_Day,
        
        Out,
        
        [XmlEnum("Out For Season")]
        Out_For_Season,
        
        [XmlEnum("Out Indefinitely")]
        Out_Indefinitely,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("organizationType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class OrganizationType : IBaseOrganizationAttributes
    {
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("name", Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
        
        [XmlAttribute("alias", Form=XmlSchemaForm.Unqualified)]
        public string Alias { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseOrganizationAttributes
    {
        
        string Id
        {
            get;
            set;
        }
        
        string Reference
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
        
        string Alias
        {
            get;
            set;
        }
        
        string Sr_Id
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("draftType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class DraftType
    {
        
        [XmlAttribute("pick", Form=XmlSchemaForm.Unqualified)]
        public string Pick { get; set; }
        
        [XmlAttribute("round", Form=XmlSchemaForm.Unqualified)]
        public string Round { get; set; }
        
        [XmlAttribute("team_id", Form=XmlSchemaForm.Unqualified)]
        public string Team_Id { get; set; }
        
        [XmlAttribute("year", Form=XmlSchemaForm.Unqualified)]
        public string Year { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("positionType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum PositionType
    {
        
        NA,
        
        C,
        
        LW,
        
        RW,
        
        D,
        
        G,
        
        F,
        
        [XmlEnum("F-D")]
        F_D,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBasePersonnelAttributes
    {
        
        string Id
        {
            get;
            set;
        }
        
        string Reference
        {
            get;
            set;
        }
        
        string First_Name
        {
            get;
            set;
        }
        
        string Last_Name
        {
            get;
            set;
        }
        
        string Full_Name
        {
            get;
            set;
        }
        
        string Sr_Id
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("periodScoreType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PeriodScoreType
    {
        
        [XmlAttribute("number", Form=XmlSchemaForm.Unqualified)]
        public string Number { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("sequence", Form=XmlSchemaForm.Unqualified)]
        public string Sequence { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("scoringType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    [XmlInclude(typeof(ExtendedScoringType))]
    public class ScoringType : IBaseShootingAttributes, IFaceoffAttributes
    {
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
        
        [XmlAttribute("faceoffs_won", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Won { get; set; }
        
        [XmlAttribute("faceoffs_lost", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Lost { get; set; }
        
        [XmlAttribute("faceoffs", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs { get; set; }
        
        [XmlAttribute("faceoff_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoff_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoff_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoff_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoff_Win_PctSpecified { get; set; }
        
        [XmlAttribute("faceoffs_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoffs_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoffs_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoffs_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoffs_Win_PctSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseShootingAttributes
    {
        
        string Goals
        {
            get;
            set;
        }
        
        string Assists
        {
            get;
            set;
        }
        
        string Shots
        {
            get;
            set;
        }
        
        string Missed_Shots
        {
            get;
            set;
        }
        
        string Points
        {
            get;
            set;
        }
        
        string Opportunities
        {
            get;
            set;
        }
        
        decimal Percentage
        {
            get;
            set;
        }
        
        decimal Kill_Pct
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IFaceoffAttributes
    {
        
        string Faceoffs_Won
        {
            get;
            set;
        }
        
        string Faceoffs_Lost
        {
            get;
            set;
        }
        
        string Faceoffs
        {
            get;
            set;
        }
        
        decimal Faceoff_Win_Pct
        {
            get;
            set;
        }
        
        decimal Faceoffs_Win_Pct
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("goaltendingType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GoaltendingType : IBaseGoaltendingAttributes
    {
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
        
        [XmlAttribute("saves", Form=XmlSchemaForm.Unqualified)]
        public string Saves { get; set; }
        
        [XmlAttribute("saves_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Saves_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Saves_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Saves_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Saves_PctSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseGoaltendingAttributes : IBaseNetAttributes
    {
        
        string Saves
        {
            get;
            set;
        }
        
        decimal Saves_Pct
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseNetAttributes
    {
        
        string Shots_Against
        {
            get;
            set;
        }
        
        string Goals_Against
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("netType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class NetType : IBaseNetAttributes
    {
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("shootingType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    [XmlInclude(typeof(ExtendedShootingType))]
    public class ShootingType : IBaseShootingAttributes
    {
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("extendedScoringType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class ExtendedScoringType : ScoringType
    {
        
        [XmlIgnore]
        private Collection<ExtendedScoringTypeStrength> _strength;
        
        [XmlElement("strength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<ExtendedScoringTypeStrength> Strength
        {
            get
            {
                return _strength;
            }
            private set
            {
                _strength = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Strength-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Strength collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool StrengthSpecified
        {
            get
            {
                return (Strength.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ExtendedScoringType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ExtendedScoringType" /> class.</para>
        /// </summary>
        public ExtendedScoringType()
        {
            _strength = new Collection<ExtendedScoringTypeStrength>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("ExtendedScoringTypeStrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class ExtendedScoringTypeStrength : IBaseShootingAttributes
    {
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
        
        [XmlAttribute("time", Form=XmlSchemaForm.Unqualified)]
        public string Time { get; set; }
        
        [XmlAttribute("type", Form=XmlSchemaForm.Unqualified)]
        public ExtendedScoringTypeStrengthType Type { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool TypeSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("ExtendedScoringTypeStrengthType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum ExtendedScoringTypeStrengthType
    {
        
        [XmlEnum("5v5")]
        Item5v5,
        
        [XmlEnum("5v4")]
        Item5v4,
        
        [XmlEnum("5v3")]
        Item5v3,
        
        [XmlEnum("4v3")]
        Item4v3,
        
        [XmlEnum("4v5")]
        Item4v5,
        
        [XmlEnum("4v4")]
        Item4v4,
        
        [XmlEnum("3v5")]
        Item3v5,
        
        [XmlEnum("3v4")]
        Item3v4,
        
        [XmlEnum("3v3")]
        Item3v3,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("extendedShootingType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class ExtendedShootingType : ShootingType, IFaceoffAttributes
    {
        
        [XmlAttribute("faceoffs_won", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Won { get; set; }
        
        [XmlAttribute("faceoffs_lost", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Lost { get; set; }
        
        [XmlAttribute("faceoffs", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs { get; set; }
        
        [XmlAttribute("faceoff_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoff_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoff_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoff_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoff_Win_PctSpecified { get; set; }
        
        [XmlAttribute("faceoffs_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoffs_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoffs_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoffs_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoffs_Win_PctSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("skaterShotZoneType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class SkaterShotZoneType : ISkaterShotZoneStats
    {
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("blocked_att", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Att { get; set; }
        
        [XmlAttribute("shot_att", Form=XmlSchemaForm.Unqualified)]
        public string Shot_Att { get; set; }
        
        [XmlAttribute("shooting_pct", Form=XmlSchemaForm.Unqualified)]
        public double Shooting_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shooting_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shooting_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shooting_PctSpecified { get; set; }
        
        [XmlAttribute("name", Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface ISkaterShotZoneStats
    {
        
        string Goals
        {
            get;
            set;
        }
        
        string Shots
        {
            get;
            set;
        }
        
        string Missed_Shots
        {
            get;
            set;
        }
        
        string Blocked_Att
        {
            get;
            set;
        }
        
        string Shot_Att
        {
            get;
            set;
        }
        
        double Shooting_Pct
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("goalieShotZoneType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GoalieShotZoneType : IGoalieShotZoneStats
    {
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("saves", Form=XmlSchemaForm.Unqualified)]
        public string Saves { get; set; }
        
        [XmlAttribute("saves_pct", Form=XmlSchemaForm.Unqualified)]
        public double Saves_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Saves_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Saves_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Saves_PctSpecified { get; set; }
        
        [XmlAttribute("name", Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IGoalieShotZoneStats
    {
        
        string Goals_Against
        {
            get;
            set;
        }
        
        string Shots_Against
        {
            get;
            set;
        }
        
        string Saves
        {
            get;
            set;
        }
        
        double Saves_Pct
        {
            get;
            set;
        }
        
        string Name
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("skaterShotZonesType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class SkaterShotZonesType
    {
        
        [XmlIgnore]
        private Collection<SkaterShotZoneType> _shot_Zone;
        
        [XmlElement("shot_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<SkaterShotZoneType> Shot_Zone
        {
            get
            {
                return _shot_Zone;
            }
            private set
            {
                _shot_Zone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shot_Zone-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Shot_Zone collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shot_ZoneSpecified
        {
            get
            {
                return (Shot_Zone.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SkaterShotZonesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SkaterShotZonesType" /> class.</para>
        /// </summary>
        public SkaterShotZonesType()
        {
            _shot_Zone = new Collection<SkaterShotZoneType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("skaterDangerZonesType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class SkaterDangerZonesType
    {
        
        [XmlIgnore]
        private Collection<SkaterShotZoneType> _danger_Zone;
        
        [XmlElement("danger_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<SkaterShotZoneType> Danger_Zone
        {
            get
            {
                return _danger_Zone;
            }
            private set
            {
                _danger_Zone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Danger_Zone-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Danger_Zone collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Danger_ZoneSpecified
        {
            get
            {
                return (Danger_Zone.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SkaterDangerZonesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SkaterDangerZonesType" /> class.</para>
        /// </summary>
        public SkaterDangerZonesType()
        {
            _danger_Zone = new Collection<SkaterShotZoneType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("goalieShotZonesType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GoalieShotZonesType
    {
        
        [XmlIgnore]
        private Collection<GoalieShotZoneType> _shot_Zone;
        
        [XmlElement("shot_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GoalieShotZoneType> Shot_Zone
        {
            get
            {
                return _shot_Zone;
            }
            private set
            {
                _shot_Zone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shot_Zone-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Shot_Zone collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shot_ZoneSpecified
        {
            get
            {
                return (Shot_Zone.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GoalieShotZonesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GoalieShotZonesType" /> class.</para>
        /// </summary>
        public GoalieShotZonesType()
        {
            _shot_Zone = new Collection<GoalieShotZoneType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("goalieDangerZonesType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GoalieDangerZonesType
    {
        
        [XmlIgnore]
        private Collection<GoalieShotZoneType> _danger_Zone;
        
        [XmlElement("danger_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GoalieShotZoneType> Danger_Zone
        {
            get
            {
                return _danger_Zone;
            }
            private set
            {
                _danger_Zone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Danger_Zone-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Danger_Zone collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Danger_ZoneSpecified
        {
            get
            {
                return (Danger_Zone.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GoalieDangerZonesType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GoalieDangerZonesType" /> class.</para>
        /// </summary>
        public GoalieDangerZonesType()
        {
            _danger_Zone = new Collection<GoalieShotZoneType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("teamType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamType : IBaseTeamAttributes, IStrengthAttributes
    {
        
        [XmlIgnore]
        private Collection<TeamTypeScoring> _scoring;
        
        [XmlElement("scoring", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<TeamTypeScoring> Scoring
        {
            get
            {
                return _scoring;
            }
            private set
            {
                _scoring = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scoring-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Scoring collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool ScoringSpecified
        {
            get
            {
                return (Scoring.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TeamType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TeamType" /> class.</para>
        /// </summary>
        public TeamType()
        {
            _scoring = new Collection<TeamTypeScoring>();
            _players = new Collection<PlayerType>();
        }
        
        [XmlElement("leaders", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeLeaders Leaders { get; set; }
        
        [XmlElement("statistics", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeStatistics Statistics { get; set; }
        
        [XmlElement("shootout", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeShootout Shootout { get; set; }
        
        [XmlElement("goaltending", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeGoaltending Goaltending { get; set; }
        
        [XmlIgnore]
        private Collection<PlayerType> _players;
        
        [XmlArray("players", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerType> Players
        {
            get
            {
                return _players;
            }
            private set
            {
                _players = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Players-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Players collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PlayersSpecified
        {
            get
            {
                return (Players.Count != 0);
            }
        }
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("name", Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
        
        [XmlAttribute("alias", Form=XmlSchemaForm.Unqualified)]
        public string Alias { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
        
        [XmlAttribute("market", Form=XmlSchemaForm.Unqualified)]
        public string Market { get; set; }
        
        [XmlAttribute("founded", Form=XmlSchemaForm.Unqualified)]
        public string Founded { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("home", Form=XmlSchemaForm.Unqualified)]
        public bool Home { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Home-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Home property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool HomeSpecified { get; set; }
        
        [XmlAttribute("strength", Form=XmlSchemaForm.Unqualified)]
        public IStrengthAttributesStrength Strength { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Strength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Strength property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool StrengthSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeScoring", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeScoring
    {
        
        [XmlIgnore]
        private Collection<PeriodScoreType> _period;
        
        [XmlElement("period", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PeriodScoreType> Period
        {
            get
            {
                return _period;
            }
            private set
            {
                _period = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Period-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Period collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PeriodSpecified
        {
            get
            {
                return (Period.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TeamTypeScoring" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TeamTypeScoring" /> class.</para>
        /// </summary>
        public TeamTypeScoring()
        {
            _period = new Collection<PeriodScoreType>();
            _overtime = new Collection<PeriodScoreType>();
            _shootout = new Collection<PeriodScoreType>();
        }
        
        [XmlIgnore]
        private Collection<PeriodScoreType> _overtime;
        
        [XmlElement("overtime", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PeriodScoreType> Overtime
        {
            get
            {
                return _overtime;
            }
            private set
            {
                _overtime = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Overtime-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Overtime collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool OvertimeSpecified
        {
            get
            {
                return (Overtime.Count != 0);
            }
        }
        
        [XmlIgnore]
        private Collection<PeriodScoreType> _shootout;
        
        [XmlElement("shootout", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PeriodScoreType> Shootout
        {
            get
            {
                return _shootout;
            }
            private set
            {
                _shootout = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shootout-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Shootout collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool ShootoutSpecified
        {
            get
            {
                return (Shootout.Count != 0);
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeLeaders", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeLeaders
    {
        
        [XmlIgnore]
        private Collection<PlayerType> _points;
        
        [XmlArray("points", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerType> Points
        {
            get
            {
                return _points;
            }
            private set
            {
                _points = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Points-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Points collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PointsSpecified
        {
            get
            {
                return (Points.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TeamTypeLeaders" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TeamTypeLeaders" /> class.</para>
        /// </summary>
        public TeamTypeLeaders()
        {
            _points = new Collection<PlayerType>();
            _goals = new Collection<PlayerType>();
            _assists = new Collection<PlayerType>();
        }
        
        [XmlIgnore]
        private Collection<PlayerType> _goals;
        
        [XmlArray("goals", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerType> Goals
        {
            get
            {
                return _goals;
            }
            private set
            {
                _goals = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Goals-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Goals collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool GoalsSpecified
        {
            get
            {
                return (Goals.Count != 0);
            }
        }
        
        [XmlIgnore]
        private Collection<PlayerType> _assists;
        
        [XmlArray("assists", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerType> Assists
        {
            get
            {
                return _assists;
            }
            private set
            {
                _assists = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Assists-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Assists collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool AssistsSpecified
        {
            get
            {
                return (Assists.Count != 0);
            }
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("leaderType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class LeaderType
    {
        
        [XmlIgnore]
        private Collection<PlayerType> _player;
        
        [XmlElement("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerType> Player
        {
            get
            {
                return _player;
            }
            private set
            {
                _player = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Player-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Player collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PlayerSpecified
        {
            get
            {
                return (Player.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="LeaderType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="LeaderType" /> class.</para>
        /// </summary>
        public LeaderType()
        {
            _player = new Collection<PlayerType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("playerType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerType : IBasePlayerAttributes
    {
        
        [XmlIgnore]
        private Collection<InjuryType> _injuries;
        
        [XmlArray("injuries", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("injury", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<InjuryType> Injuries
        {
            get
            {
                return _injuries;
            }
            private set
            {
                _injuries = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Injuries-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Injuries collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool InjuriesSpecified
        {
            get
            {
                return (Injuries.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PlayerType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PlayerType" /> class.</para>
        /// </summary>
        public PlayerType()
        {
            _injuries = new Collection<InjuryType>();
        }
        
        [XmlElement("statistics", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public PlayerTypeStatistics Statistics { get; set; }
        
        [XmlElement("time_on_ice", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public PlayerTypeTime_On_Ice Time_On_Ice { get; set; }
        
        [XmlElement("goaltending", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public PlayerTypeGoaltending Goaltending { get; set; }
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("first_name", Form=XmlSchemaForm.Unqualified)]
        public string First_Name { get; set; }
        
        [XmlAttribute("last_name", Form=XmlSchemaForm.Unqualified)]
        public string Last_Name { get; set; }
        
        [XmlAttribute("full_name", Form=XmlSchemaForm.Unqualified)]
        public string Full_Name { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
        
        [XmlAttribute("abbr_name", Form=XmlSchemaForm.Unqualified)]
        public string Abbr_Name { get; set; }
        
        [XmlAttribute("jersey_number", Form=XmlSchemaForm.Unqualified)]
        public string Jersey_Number { get; set; }
        
        [XmlAttribute("position", Form=XmlSchemaForm.Unqualified)]
        public PositionType Position { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Position-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Position property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PositionSpecified { get; set; }
        
        [XmlAttribute("primary_position", Form=XmlSchemaForm.Unqualified)]
        public PositionType Primary_Position { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Primary_Position-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Primary_Position property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Primary_PositionSpecified { get; set; }
        
        [XmlAttribute("captain", Form=XmlSchemaForm.Unqualified)]
        public IBasePlayerAttributesCaptain Captain { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Captain-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Captain property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool CaptainSpecified { get; set; }
        
        [XmlAttribute("status", Form=XmlSchemaForm.Unqualified)]
        public IBasePlayerAttributesStatus Status { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Status-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool StatusSpecified { get; set; }
        
        [XmlAttribute("handedness", Form=XmlSchemaForm.Unqualified)]
        public string Handedness { get; set; }
        
        [XmlAttribute("played", Form=XmlSchemaForm.Unqualified)]
        public bool Played { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Played-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Played property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PlayedSpecified { get; set; }
        
        [XmlAttribute("scratched", Form=XmlSchemaForm.Unqualified)]
        public bool Scratched { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scratched-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scratched property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool ScratchedSpecified { get; set; }
        
        [XmlAttribute("starter", Form=XmlSchemaForm.Unqualified)]
        public bool Starter { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Starter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Starter property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool StarterSpecified { get; set; }
        
        [XmlAttribute("name_suffix", Form=XmlSchemaForm.Unqualified)]
        public string Name_Suffix { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeInjuries", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerTypeInjuries
    {
        
        [XmlIgnore]
        private Collection<InjuryType> _injury;
        
        [XmlElement("injury", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<InjuryType> Injury
        {
            get
            {
                return _injury;
            }
            private set
            {
                _injury = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Injury-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Injury collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool InjurySpecified
        {
            get
            {
                return (Injury.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PlayerTypeInjuries" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PlayerTypeInjuries" /> class.</para>
        /// </summary>
        public PlayerTypeInjuries()
        {
            _injury = new Collection<InjuryType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeStatistics", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerTypeStatistics : IBaseSkaterAttributes, IFaceoffAttributes
    {
        
        [XmlIgnore]
        private Collection<SkaterShotZoneType> _shot_Zones;
        
        [XmlArray("shot_zones", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("shot_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<SkaterShotZoneType> Shot_Zones
        {
            get
            {
                return _shot_Zones;
            }
            private set
            {
                _shot_Zones = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shot_Zones-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Shot_Zones collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shot_ZonesSpecified
        {
            get
            {
                return (Shot_Zones.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PlayerTypeStatistics" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PlayerTypeStatistics" /> class.</para>
        /// </summary>
        public PlayerTypeStatistics()
        {
            _shot_Zones = new Collection<SkaterShotZoneType>();
            _danger_Zones = new Collection<SkaterShotZoneType>();
            _periods = new Collection<PlayerPeriodType>();
        }
        
        [XmlIgnore]
        private Collection<SkaterShotZoneType> _danger_Zones;
        
        [XmlArray("danger_zones", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("danger_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<SkaterShotZoneType> Danger_Zones
        {
            get
            {
                return _danger_Zones;
            }
            private set
            {
                _danger_Zones = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Danger_Zones-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Danger_Zones collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Danger_ZonesSpecified
        {
            get
            {
                return (Danger_Zones.Count != 0);
            }
        }
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ExtendedShootingType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ExtendedShootingType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ExtendedShootingType Evenstrength { get; set; }
        
        [XmlElement("penalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ShootingType Penalty { get; set; }
        
        [XmlElement("shootout", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ShootingType Shootout { get; set; }
        
        [XmlIgnore]
        private Collection<PlayerPeriodType> _periods;
        
        [XmlArray("periods", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("period", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerPeriodType> Periods
        {
            get
            {
                return _periods;
            }
            private set
            {
                _periods = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Periods-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Periods collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PeriodsSpecified
        {
            get
            {
                return (Periods.Count != 0);
            }
        }
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
        
        [XmlAttribute("penalties", Form=XmlSchemaForm.Unqualified)]
        public string Penalties { get; set; }
        
        [XmlAttribute("penalty_minutes", Form=XmlSchemaForm.Unqualified)]
        public string Penalty_Minutes { get; set; }
        
        [XmlAttribute("blocked_att", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Att { get; set; }
        
        [XmlAttribute("hits", Form=XmlSchemaForm.Unqualified)]
        public string Hits { get; set; }
        
        [XmlAttribute("giveaways", Form=XmlSchemaForm.Unqualified)]
        public string Giveaways { get; set; }
        
        [XmlAttribute("takeaways", Form=XmlSchemaForm.Unqualified)]
        public string Takeaways { get; set; }
        
        [XmlAttribute("blocked_shots", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Shots { get; set; }
        
        [XmlAttribute("shooting_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Shooting_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shooting_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shooting_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shooting_PctSpecified { get; set; }
        
        [XmlAttribute("overtime_assists", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Assists { get; set; }
        
        [XmlAttribute("overtime_shots", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Shots { get; set; }
        
        [XmlAttribute("penalties_major", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Major { get; set; }
        
        [XmlAttribute("penalties_minor", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Minor { get; set; }
        
        [XmlAttribute("penalties_misconduct", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Misconduct { get; set; }
        
        [XmlAttribute("emptynet_goals", Form=XmlSchemaForm.Unqualified)]
        public string Emptynet_Goals { get; set; }
        
        [XmlAttribute("faceoffs_won", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Won { get; set; }
        
        [XmlAttribute("faceoffs_lost", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Lost { get; set; }
        
        [XmlAttribute("faceoffs", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs { get; set; }
        
        [XmlAttribute("faceoff_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoff_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoff_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoff_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoff_Win_PctSpecified { get; set; }
        
        [XmlAttribute("faceoffs_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoffs_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoffs_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoffs_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoffs_Win_PctSpecified { get; set; }
        
        [XmlAttribute("winning_goal", Form=XmlSchemaForm.Unqualified)]
        public bool Winning_Goal { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Winning_Goal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Winning_Goal property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Winning_GoalSpecified { get; set; }
        
        [XmlAttribute("plus_minus", Form=XmlSchemaForm.Unqualified)]
        public string Plus_Minus { get; set; }
        
        [XmlAttribute("overtime_goals", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Goals { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeStatisticsPeriods", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerTypeStatisticsPeriods
    {
        
        [XmlIgnore]
        private Collection<PlayerPeriodType> _period;
        
        [XmlElement("period", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerPeriodType> Period
        {
            get
            {
                return _period;
            }
            private set
            {
                _period = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Period-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Period collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PeriodSpecified
        {
            get
            {
                return (Period.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PlayerTypeStatisticsPeriods" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PlayerTypeStatisticsPeriods" /> class.</para>
        /// </summary>
        public PlayerTypeStatisticsPeriods()
        {
            _period = new Collection<PlayerPeriodType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("playerPeriodType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerPeriodType : IBaseSkaterAttributes, IFaceoffAttributes, IBasePeriodAttributes
    {
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ShootingType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ShootingType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ShootingType Evenstrength { get; set; }
        
        [XmlElement("penalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ShootingType Penalty { get; set; }
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
        
        [XmlAttribute("penalties", Form=XmlSchemaForm.Unqualified)]
        public string Penalties { get; set; }
        
        [XmlAttribute("penalty_minutes", Form=XmlSchemaForm.Unqualified)]
        public string Penalty_Minutes { get; set; }
        
        [XmlAttribute("blocked_att", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Att { get; set; }
        
        [XmlAttribute("hits", Form=XmlSchemaForm.Unqualified)]
        public string Hits { get; set; }
        
        [XmlAttribute("giveaways", Form=XmlSchemaForm.Unqualified)]
        public string Giveaways { get; set; }
        
        [XmlAttribute("takeaways", Form=XmlSchemaForm.Unqualified)]
        public string Takeaways { get; set; }
        
        [XmlAttribute("blocked_shots", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Shots { get; set; }
        
        [XmlAttribute("shooting_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Shooting_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shooting_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shooting_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shooting_PctSpecified { get; set; }
        
        [XmlAttribute("overtime_assists", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Assists { get; set; }
        
        [XmlAttribute("overtime_shots", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Shots { get; set; }
        
        [XmlAttribute("penalties_major", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Major { get; set; }
        
        [XmlAttribute("penalties_minor", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Minor { get; set; }
        
        [XmlAttribute("penalties_misconduct", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Misconduct { get; set; }
        
        [XmlAttribute("emptynet_goals", Form=XmlSchemaForm.Unqualified)]
        public string Emptynet_Goals { get; set; }
        
        [XmlAttribute("faceoffs_won", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Won { get; set; }
        
        [XmlAttribute("faceoffs_lost", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Lost { get; set; }
        
        [XmlAttribute("faceoffs", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs { get; set; }
        
        [XmlAttribute("faceoff_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoff_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoff_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoff_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoff_Win_PctSpecified { get; set; }
        
        [XmlAttribute("faceoffs_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoffs_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoffs_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoffs_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoffs_Win_PctSpecified { get; set; }
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("number", Form=XmlSchemaForm.Unqualified)]
        public string Number { get; set; }
        
        [XmlAttribute("sequence", Form=XmlSchemaForm.Unqualified)]
        public string Sequence { get; set; }
        
        [XmlAttribute("type", Form=XmlSchemaForm.Unqualified)]
        public IBasePeriodAttributesType Type { get; set; }
        
        [XmlAttribute("number_of_shifts", Form=XmlSchemaForm.Unqualified)]
        public string Number_Of_Shifts { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseSkaterAttributes : IBaseShootingAttributes
    {
        
        string Penalties
        {
            get;
            set;
        }
        
        string Penalty_Minutes
        {
            get;
            set;
        }
        
        string Blocked_Att
        {
            get;
            set;
        }
        
        string Hits
        {
            get;
            set;
        }
        
        string Giveaways
        {
            get;
            set;
        }
        
        string Takeaways
        {
            get;
            set;
        }
        
        string Blocked_Shots
        {
            get;
            set;
        }
        
        decimal Shooting_Pct
        {
            get;
            set;
        }
        
        string Overtime_Assists
        {
            get;
            set;
        }
        
        string Overtime_Shots
        {
            get;
            set;
        }
        
        string Penalties_Major
        {
            get;
            set;
        }
        
        string Penalties_Minor
        {
            get;
            set;
        }
        
        string Penalties_Misconduct
        {
            get;
            set;
        }
        
        string Emptynet_Goals
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBasePeriodAttributes
    {
        
        string Id
        {
            get;
            set;
        }
        
        string Number
        {
            get;
            set;
        }
        
        string Sequence
        {
            get;
            set;
        }
        
        IBasePeriodAttributesType Type
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IBasePeriodAttributesType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IBasePeriodAttributesType
    {
        
        REG,
        
        OT,
        
        SO,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeTime_On_Ice", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerTypeTime_On_Ice
    {
        
        [XmlAttribute("shifts", Form=XmlSchemaForm.Unqualified)]
        public string Shifts { get; set; }
        
        [XmlAttribute("powerplay", Form=XmlSchemaForm.Unqualified)]
        public string Powerplay { get; set; }
        
        [XmlAttribute("shorthanded", Form=XmlSchemaForm.Unqualified)]
        public string Shorthanded { get; set; }
        
        [XmlAttribute("evenstrength", Form=XmlSchemaForm.Unqualified)]
        public string Evenstrength { get; set; }
        
        [XmlAttribute("avg", Form=XmlSchemaForm.Unqualified)]
        public string Avg { get; set; }
        
        [XmlAttribute("total", Form=XmlSchemaForm.Unqualified)]
        public string Total { get; set; }
        
        [XmlAttribute("overtime", Form=XmlSchemaForm.Unqualified)]
        public string Overtime { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeGoaltending", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerTypeGoaltending : IBaseGoaltendingAttributes
    {
        
        [XmlIgnore]
        private Collection<GoalieShotZoneType> _shot_Zones;
        
        [XmlArray("shot_zones", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("shot_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GoalieShotZoneType> Shot_Zones
        {
            get
            {
                return _shot_Zones;
            }
            private set
            {
                _shot_Zones = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shot_Zones-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Shot_Zones collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shot_ZonesSpecified
        {
            get
            {
                return (Shot_Zones.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PlayerTypeGoaltending" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PlayerTypeGoaltending" /> class.</para>
        /// </summary>
        public PlayerTypeGoaltending()
        {
            _shot_Zones = new Collection<GoalieShotZoneType>();
            _danger_Zones = new Collection<GoalieShotZoneType>();
            _periods = new Collection<GoaliePeriodType>();
        }
        
        [XmlIgnore]
        private Collection<GoalieShotZoneType> _danger_Zones;
        
        [XmlArray("danger_zones", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("danger_zone", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GoalieShotZoneType> Danger_Zones
        {
            get
            {
                return _danger_Zones;
            }
            private set
            {
                _danger_Zones = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Danger_Zones-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Danger_Zones collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool Danger_ZonesSpecified
        {
            get
            {
                return (Danger_Zones.Count != 0);
            }
        }
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Evenstrength { get; set; }
        
        [XmlElement("penalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Penalty { get; set; }
        
        [XmlElement("shootout", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Shootout { get; set; }
        
        [XmlIgnore]
        private Collection<GoaliePeriodType> _periods;
        
        [XmlArray("periods", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        [XmlArrayItem("period", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GoaliePeriodType> Periods
        {
            get
            {
                return _periods;
            }
            private set
            {
                _periods = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Periods-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Periods collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PeriodsSpecified
        {
            get
            {
                return (Periods.Count != 0);
            }
        }
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
        
        [XmlAttribute("saves", Form=XmlSchemaForm.Unqualified)]
        public string Saves { get; set; }
        
        [XmlAttribute("saves_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Saves_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Saves_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Saves_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Saves_PctSpecified { get; set; }
        
        [XmlAttribute("shutout", Form=XmlSchemaForm.Unqualified)]
        public bool Shutout { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shutout-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shutout property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool ShutoutSpecified { get; set; }
        
        [XmlAttribute("credit", Form=XmlSchemaForm.Unqualified)]
        public PlayerTypeGoaltendingCredit Credit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Credit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Credit property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool CreditSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeGoaltendingPeriods", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class PlayerTypeGoaltendingPeriods
    {
        
        [XmlIgnore]
        private Collection<GoaliePeriodType> _period;
        
        [XmlElement("period", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GoaliePeriodType> Period
        {
            get
            {
                return _period;
            }
            private set
            {
                _period = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Period-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Period collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PeriodSpecified
        {
            get
            {
                return (Period.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PlayerTypeGoaltendingPeriods" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PlayerTypeGoaltendingPeriods" /> class.</para>
        /// </summary>
        public PlayerTypeGoaltendingPeriods()
        {
            _period = new Collection<GoaliePeriodType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("goaliePeriodType", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GoaliePeriodType : IBaseGoaltendingAttributes, IBasePeriodAttributes
    {
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Evenstrength { get; set; }
        
        [XmlElement("penalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Penalty { get; set; }
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
        
        [XmlAttribute("saves", Form=XmlSchemaForm.Unqualified)]
        public string Saves { get; set; }
        
        [XmlAttribute("saves_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Saves_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Saves_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Saves_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Saves_PctSpecified { get; set; }
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("number", Form=XmlSchemaForm.Unqualified)]
        public string Number { get; set; }
        
        [XmlAttribute("sequence", Form=XmlSchemaForm.Unqualified)]
        public string Sequence { get; set; }
        
        [XmlAttribute("type", Form=XmlSchemaForm.Unqualified)]
        public IBasePeriodAttributesType Type { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("PlayerTypeGoaltendingCredit", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum PlayerTypeGoaltendingCredit
    {
        
        [XmlEnum("none")]
        None,
        
        [XmlEnum("win")]
        Win,
        
        [XmlEnum("loss")]
        Loss,
        
        [XmlEnum("overtime_loss")]
        Overtime_Loss,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBasePlayerAttributes : IBasePersonnelAttributes
    {
        
        string Abbr_Name
        {
            get;
            set;
        }
        
        string Jersey_Number
        {
            get;
            set;
        }
        
        PositionType Position
        {
            get;
            set;
        }
        
        PositionType Primary_Position
        {
            get;
            set;
        }
        
        IBasePlayerAttributesCaptain Captain
        {
            get;
            set;
        }
        
        IBasePlayerAttributesStatus Status
        {
            get;
            set;
        }
        
        string Handedness
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IBasePlayerAttributesCaptain", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IBasePlayerAttributesCaptain
    {
        
        C,
        
        A,
        
        N,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IBasePlayerAttributesStatus", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IBasePlayerAttributesStatus
    {
        
        ACT,
        
        [XmlEnum("M-LEAGUE")]
        M_LEAGUE,
        
        SUS,
        
        IR,
        
        NWT,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeStatistics", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeStatistics : IBaseSkaterAttributes, IFaceoffAttributes
    {
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ExtendedScoringType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ExtendedScoringType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public ExtendedScoringType Evenstrength { get; set; }
        
        [XmlElement("penalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeStatisticsPenalty Penalty { get; set; }
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
        
        [XmlAttribute("penalties", Form=XmlSchemaForm.Unqualified)]
        public string Penalties { get; set; }
        
        [XmlAttribute("penalty_minutes", Form=XmlSchemaForm.Unqualified)]
        public string Penalty_Minutes { get; set; }
        
        [XmlAttribute("blocked_att", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Att { get; set; }
        
        [XmlAttribute("hits", Form=XmlSchemaForm.Unqualified)]
        public string Hits { get; set; }
        
        [XmlAttribute("giveaways", Form=XmlSchemaForm.Unqualified)]
        public string Giveaways { get; set; }
        
        [XmlAttribute("takeaways", Form=XmlSchemaForm.Unqualified)]
        public string Takeaways { get; set; }
        
        [XmlAttribute("blocked_shots", Form=XmlSchemaForm.Unqualified)]
        public string Blocked_Shots { get; set; }
        
        [XmlAttribute("shooting_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Shooting_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shooting_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shooting_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Shooting_PctSpecified { get; set; }
        
        [XmlAttribute("overtime_assists", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Assists { get; set; }
        
        [XmlAttribute("overtime_shots", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Shots { get; set; }
        
        [XmlAttribute("penalties_major", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Major { get; set; }
        
        [XmlAttribute("penalties_minor", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Minor { get; set; }
        
        [XmlAttribute("penalties_misconduct", Form=XmlSchemaForm.Unqualified)]
        public string Penalties_Misconduct { get; set; }
        
        [XmlAttribute("emptynet_goals", Form=XmlSchemaForm.Unqualified)]
        public string Emptynet_Goals { get; set; }
        
        [XmlAttribute("faceoffs_won", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Won { get; set; }
        
        [XmlAttribute("faceoffs_lost", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs_Lost { get; set; }
        
        [XmlAttribute("faceoffs", Form=XmlSchemaForm.Unqualified)]
        public string Faceoffs { get; set; }
        
        [XmlAttribute("faceoff_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoff_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoff_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoff_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoff_Win_PctSpecified { get; set; }
        
        [XmlAttribute("faceoffs_win_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Faceoffs_Win_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Faceoffs_Win_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Faceoffs_Win_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Faceoffs_Win_PctSpecified { get; set; }
        
        [XmlAttribute("powerplays", Form=XmlSchemaForm.Unqualified)]
        public string Powerplays { get; set; }
        
        [XmlAttribute("team_penalties", Form=XmlSchemaForm.Unqualified)]
        public string Team_Penalties { get; set; }
        
        [XmlAttribute("team_penalty_minutes", Form=XmlSchemaForm.Unqualified)]
        public string Team_Penalty_Minutes { get; set; }
        
        [XmlAttribute("plus_minus", Form=XmlSchemaForm.Unqualified)]
        public string Plus_Minus { get; set; }
        
        [XmlAttribute("winning_goal", Form=XmlSchemaForm.Unqualified)]
        public bool Winning_Goal { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Winning_Goal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Winning_Goal property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Winning_GoalSpecified { get; set; }
        
        [XmlAttribute("overtime_goals", Form=XmlSchemaForm.Unqualified)]
        public string Overtime_Goals { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeStatisticsPenalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeStatisticsPenalty : IBaseShootingAttributes
    {
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeShootout", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeShootout : IBaseShootingAttributes, IBaseGoaltendingAttributes
    {
        
        [XmlAttribute("goals", Form=XmlSchemaForm.Unqualified)]
        public string Goals { get; set; }
        
        [XmlAttribute("assists", Form=XmlSchemaForm.Unqualified)]
        public string Assists { get; set; }
        
        [XmlAttribute("shots", Form=XmlSchemaForm.Unqualified)]
        public string Shots { get; set; }
        
        [XmlAttribute("missed_shots", Form=XmlSchemaForm.Unqualified)]
        public string Missed_Shots { get; set; }
        
        [XmlAttribute("points", Form=XmlSchemaForm.Unqualified)]
        public string Points { get; set; }
        
        [XmlAttribute("opportunities", Form=XmlSchemaForm.Unqualified)]
        public string Opportunities { get; set; }
        
        [XmlAttribute("percentage", Form=XmlSchemaForm.Unqualified)]
        public decimal Percentage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Percentage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Percentage property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PercentageSpecified { get; set; }
        
        [XmlAttribute("kill_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Kill_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Kill_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Kill_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Kill_PctSpecified { get; set; }
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
        
        [XmlAttribute("saves", Form=XmlSchemaForm.Unqualified)]
        public string Saves { get; set; }
        
        [XmlAttribute("saves_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Saves_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Saves_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Saves_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Saves_PctSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeGoaltending", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeGoaltending : IBaseGoaltendingAttributes
    {
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Evenstrength { get; set; }
        
        [XmlElement("penalty", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GoaltendingType Penalty { get; set; }
        
        [XmlElement("emptynet", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeGoaltendingEmptynet Emptynet { get; set; }
        
        [XmlElement("time_on_ice", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public TeamTypeGoaltendingTime_On_Ice Time_On_Ice { get; set; }
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
        
        [XmlAttribute("saves", Form=XmlSchemaForm.Unqualified)]
        public string Saves { get; set; }
        
        [XmlAttribute("saves_pct", Form=XmlSchemaForm.Unqualified)]
        public decimal Saves_Pct { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Saves_Pct-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Saves_Pct property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool Saves_PctSpecified { get; set; }
        
        [XmlAttribute("total_shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Total_Shots_Against { get; set; }
        
        [XmlAttribute("total_goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Total_Goals_Against { get; set; }
        
        [XmlAttribute("shutout", Form=XmlSchemaForm.Unqualified)]
        public bool Shutout { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shutout-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Shutout property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool ShutoutSpecified { get; set; }
        
        [XmlAttribute("credit", Form=XmlSchemaForm.Unqualified)]
        public TeamTypeGoaltendingCredit Credit { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Credit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Credit property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool CreditSpecified { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeGoaltendingEmptynet", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeGoaltendingEmptynet : IBaseNetAttributes
    {
        
        [XmlElement("powerplay", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public NetType Powerplay { get; set; }
        
        [XmlElement("shorthanded", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public NetType Shorthanded { get; set; }
        
        [XmlElement("evenstrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public NetType Evenstrength { get; set; }
        
        [XmlAttribute("shots_against", Form=XmlSchemaForm.Unqualified)]
        public string Shots_Against { get; set; }
        
        [XmlAttribute("goals_against", Form=XmlSchemaForm.Unqualified)]
        public string Goals_Against { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeGoaltendingTime_On_Ice", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypeGoaltendingTime_On_Ice
    {
        
        [XmlAttribute("total", Form=XmlSchemaForm.Unqualified)]
        public string Total { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypeGoaltendingCredit", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum TeamTypeGoaltendingCredit
    {
        
        [XmlEnum("none")]
        None,
        
        [XmlEnum("win")]
        Win,
        
        [XmlEnum("loss")]
        Loss,
        
        [XmlEnum("overtime_loss")]
        Overtime_Loss,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("TeamTypePlayers", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class TeamTypePlayers
    {
        
        [XmlIgnore]
        private Collection<PlayerType> _player;
        
        [XmlElement("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<PlayerType> Player
        {
            get
            {
                return _player;
            }
            private set
            {
                _player = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Player-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Player collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool PlayerSpecified
        {
            get
            {
                return (Player.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="TeamTypePlayers" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="TeamTypePlayers" /> class.</para>
        /// </summary>
        public TeamTypePlayers()
        {
            _player = new Collection<PlayerType>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseTeamAttributes : IBaseOrganizationAttributes
    {
        
        string Market
        {
            get;
            set;
        }
        
        string Founded
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IStrengthAttributes
    {
        
        IStrengthAttributesStrength Strength
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IStrengthAttributesStrength", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IStrengthAttributesStrength
    {
        
        [XmlEnum("shorthanded")]
        Shorthanded,
        
        [XmlEnum("powerplay")]
        Powerplay,
        
        [XmlEnum("even")]
        Even,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeOfficials", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GameTypeOfficials
    {
        
        [XmlIgnore]
        private Collection<GameTypeOfficialsOfficial> _official;
        
        [XmlElement("official", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GameTypeOfficialsOfficial> Official
        {
            get
            {
                return _official;
            }
            private set
            {
                _official = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Official-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Official collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool OfficialSpecified
        {
            get
            {
                return (Official.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GameTypeOfficials" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GameTypeOfficials" /> class.</para>
        /// </summary>
        public GameTypeOfficials()
        {
            _official = new Collection<GameTypeOfficialsOfficial>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeOfficialsOfficial", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GameTypeOfficialsOfficial : IBasePersonnelAttributes
    {
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("first_name", Form=XmlSchemaForm.Unqualified)]
        public string First_Name { get; set; }
        
        [XmlAttribute("last_name", Form=XmlSchemaForm.Unqualified)]
        public string Last_Name { get; set; }
        
        [XmlAttribute("full_name", Form=XmlSchemaForm.Unqualified)]
        public string Full_Name { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
        
        [XmlAttribute("assignment", Form=XmlSchemaForm.Unqualified)]
        public GameTypeOfficialsOfficialAssignment Assignment { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Assignment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Assignment property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool AssignmentSpecified { get; set; }
        
        [XmlAttribute("experience", Form=XmlSchemaForm.Unqualified)]
        public string Experience { get; set; }
        
        [XmlAttribute("number", Form=XmlSchemaForm.Unqualified)]
        public string Number { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeOfficialsOfficialAssignment", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum GameTypeOfficialsOfficialAssignment
    {
        
        Referee,
        
        Linesmen,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeStars", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GameTypeStars
    {
        
        [XmlIgnore]
        private Collection<GameTypeStarsStar> _star;
        
        [XmlElement("star", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public Collection<GameTypeStarsStar> Star
        {
            get
            {
                return _star;
            }
            private set
            {
                _star = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Star-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Star collection is empty.</para>
        /// </summary>
        [XmlIgnore]
        public bool StarSpecified
        {
            get
            {
                return (Star.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GameTypeStars" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GameTypeStars" /> class.</para>
        /// </summary>
        public GameTypeStars()
        {
            _star = new Collection<GameTypeStarsStar>();
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeStarsStar", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GameTypeStarsStar
    {
        
        [XmlElement("player", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GameTypeStarsStarPlayer Player { get; set; }
        
        [XmlElement("team", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
        public GameTypeStarsStarTeam Team { get; set; }
        
        [XmlAttribute("sequence", Form=XmlSchemaForm.Unqualified)]
        public string Sequence { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeStarsStarPlayer", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GameTypeStarsStarPlayer
    {
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("full_name", Form=XmlSchemaForm.Unqualified)]
        public string Full_Name { get; set; }
        
        [XmlAttribute("jersey_number", Form=XmlSchemaForm.Unqualified)]
        public string Jersey_Number { get; set; }
        
        [XmlAttribute("position", Form=XmlSchemaForm.Unqualified)]
        public PositionType Position { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Position-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Position property is specified.</para>
        /// </summary>
        [XmlIgnore]
        public bool PositionSpecified { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
        
        [XmlAttribute("name_suffix", Form=XmlSchemaForm.Unqualified)]
        public string Name_Suffix { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("GameTypeStarsStarTeam", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd", AnonymousType=true)]
    [DebuggerStepThroughAttribute]
    [DesignerCategoryAttribute("code")]
    public class GameTypeStarsStarTeam : IBaseTeamAttributes
    {
        
        [XmlAttribute("id", Form=XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        [XmlAttribute("reference", Form=XmlSchemaForm.Unqualified)]
        public string Reference { get; set; }
        
        [XmlAttribute("name", Form=XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
        
        [XmlAttribute("alias", Form=XmlSchemaForm.Unqualified)]
        public string Alias { get; set; }
        
        [XmlAttribute("sr_id", Form=XmlSchemaForm.Unqualified)]
        public string Sr_Id { get; set; }
        
        [XmlAttribute("market", Form=XmlSchemaForm.Unqualified)]
        public string Market { get; set; }
        
        [XmlAttribute("founded", Form=XmlSchemaForm.Unqualified)]
        public string Founded { get; set; }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IBaseGameAttributes
    {
        
        string Id
        {
            get;
            set;
        }
        
        string Title
        {
            get;
            set;
        }
        
        IBaseGameAttributesStatus Status
        {
            get;
            set;
        }
        
        IBaseGameAttributesCoverage Coverage
        {
            get;
            set;
        }
        
        string Away_Team
        {
            get;
            set;
        }
        
        string Home_Team
        {
            get;
            set;
        }
        
        DateTime Scheduled
        {
            get;
            set;
        }
        
        string Reference
        {
            get;
            set;
        }
        
        string Sr_Id
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IBaseGameAttributesStatus", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IBaseGameAttributesStatus
    {
        
        [XmlEnum("scheduled")]
        Scheduled,
        
        [XmlEnum("created")]
        Created,
        
        [XmlEnum("inprogress")]
        Inprogress,
        
        [XmlEnum("halftime")]
        Halftime,
        
        [XmlEnum("complete")]
        Complete,
        
        [XmlEnum("closed")]
        Closed,
        
        [XmlEnum("cancelled")]
        Cancelled,
        
        [XmlEnum("postponed")]
        Postponed,
        
        [XmlEnum("delayed")]
        Delayed,
        
        [XmlEnum("unnecessary")]
        Unnecessary,
        
        [XmlEnum("time-tbd")]
        Time_Tbd,
        
        [XmlEnum("if-necessary")]
        If_Necessary,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IBaseGameAttributesCoverage", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IBaseGameAttributesCoverage
    {
        
        [XmlEnum("full")]
        Full,
        
        [XmlEnum("extended_boxscore")]
        Extended_Boxscore,
        
        [XmlEnum("boxscore")]
        Boxscore,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IGameStateAttributes
    {
        
        string Clock
        {
            get;
            set;
        }
        
        string Period
        {
            get;
            set;
        }
        
        IGameStateAttributesEntry_Mode Entry_Mode
        {
            get;
            set;
        }
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    [Serializable]
    [XmlType("IGameStateAttributesEntry_Mode", Namespace="http://feed.elasticstats.com/schema/hockey/game-v6.0.xsd")]
    public enum IGameStateAttributesEntry_Mode
    {
        
        LDE,
        
        INGEST,
    }
    
    [GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.0.0")]
    public interface IGameMetadataAttributes
    {
        
        string Attendance
        {
            get;
            set;
        }
        
        DateTime Start_Time
        {
            get;
            set;
        }
        
        DateTime End_Time
        {
            get;
            set;
        }
        
        string Total_Game_Duration
        {
            get;
            set;
        }
    }
}

